{"version":3,"file":"static/js/70.76030aaf.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/AddContactForm.jsx","components/ContactForm/EditContactForm.jsx","redux/filter/selectors.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactCard/ContactCard.styled.jsx","components/ContactCard/ContactCard.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx","utils/userNameNotmalization.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactForm = styled.form`\n  max-width: 452px;\n  width: 100%;\n  padding: 28px 24px;\n  background-color: ${({ theme }) => theme.colors.primary};\n  border-radius: 15px;\n  box-shadow: 0px 7px 23px rgba(0, 0, 0, 0.05);\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    padding: 45px 51px;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 15px 20px;\n  width: 100%;\n  font-size: 14px;\n  line-height: 1.4;\n  border: 1px solid ${({ theme }) => theme.colors.inputBorder};\n  border-radius: 15px;\n  outline: none;\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.4;\n    color: ${({ theme }) => theme.colors.secondaryText};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 24px;\n`;\n\nexport const TextLabel = styled.span`\n  display: block;\n  margin-bottom: 5.5px;\n  font-size: 14px;\n  line-height: 1.4;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  padding: 14px;\n  width: 100%;\n  font-weight: 700;\n  font-size: 10px;\n  line-height: 1.5;\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.primary};\n  background-color: ${({ theme }) => theme.colors.accent};\n  border: 1px solid ${({ theme }) => theme.colors.accent};\n  border-radius: 12px;\n  transition: background-color\n      ${({ theme }) => `${theme.duration} ${theme.timingFunction}`},\n    color ${({ theme }) => `${theme.duration} ${theme.timingFunction}`};\n  cursor: pointer;\n\n  &:hover:not(:disabled) {\n    color: ${({ theme }) => theme.colors.accent};\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  &:disabled {\n    opacity: 0.8;\n  }\n`;\n","import { useForm } from 'react-hook-form';\nimport { toast } from 'react-hot-toast';\nimport PropTypes from 'prop-types';\nimport { useAddContactMutation } from 'redux/contacts/slice';\nimport { Loader } from 'components/Loader';\nimport { validatePattern, errorMessage } from 'constants';\nimport { userNameNormalization } from 'utils';\nimport * as S from './ContactForm.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const AddContactForm = ({ contacts }) => {\n  const { register, handleSubmit, reset } = useForm({\n    defaultValues: initialValues,\n  });\n  const [addContact, { isLoading: isAdding }] = useAddContactMutation();\n\n  const contactValidationByName = newName => {\n    return contacts.some(({ name }) => name === newName);\n  };\n\n  const onSubmit = async ({ name, number }) => {\n    const normalizedName = userNameNormalization(name);\n\n    if (contactValidationByName(normalizedName)) {\n      toast.error(`${normalizedName} is already in contacts.`);\n      return;\n    }\n\n    await addContact({ name: normalizedName, number });\n    reset();\n  };\n\n  return (\n    <S.ContactForm\n      autoComplete=\"off\"\n      onSubmit={handleSubmit(data => {\n        onSubmit(data);\n      })}\n    >\n      <S.Label>\n        <S.TextLabel>Name</S.TextLabel>\n        <S.Input\n          {...register('name')}\n          type=\"text\"\n          pattern={validatePattern.name}\n          title={errorMessage.name}\n          placeholder=\"Full name\"\n          required\n        />\n      </S.Label>\n\n      <S.Label>\n        <S.TextLabel>Number</S.TextLabel>\n        <S.Input\n          {...register('number')}\n          type=\"tel\"\n          pattern={validatePattern.number}\n          title={errorMessage.number}\n          placeholder=\"Phone number\"\n          maxLength=\"20\"\n          required\n        />\n      </S.Label>\n\n      <S.Button type=\"submit\" disabled={isAdding}>\n        {isAdding ? (\n          <Loader width=\"15\" height=\"15\" color=\"#fff\" />\n        ) : (\n          'Add contact'\n        )}\n      </S.Button>\n    </S.ContactForm>\n  );\n};\n\nAddContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useForm } from 'react-hook-form';\nimport { toast } from 'react-hot-toast';\nimport PropTypes from 'prop-types';\nimport {\n  useUpdateContactMutation,\n  useFetchContactsQuery,\n} from 'redux/contacts/slice';\nimport { Loader } from 'components/Loader';\nimport { validatePattern, errorMessage } from 'constants';\nimport { userNameNormalization } from 'utils';\nimport * as S from './ContactForm.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const EditContactForm = ({ id, name: oldName, number: oldNumber }) => {\n  const { register, handleSubmit, reset } = useForm({\n    defaultValues: initialValues,\n  });\n  const [updateContact, { isLoading: isUpdating }] = useUpdateContactMutation();\n  const { data: contacts } = useFetchContactsQuery();\n\n  const contactValidationName = newName => {\n    if (newName === oldName) {\n      toast.error('You entered the old name.');\n      return true;\n    }\n\n    if (contacts.some(({ name }) => name === newName)) {\n      toast.error(`${newName} is already in contacts.`);\n      return true;\n    }\n\n    return false;\n  };\n\n  const contactValidationNumber = newNumber => {\n    if (newNumber === oldNumber) {\n      toast.error('You entered the old phone number.');\n      return true;\n    }\n\n    return false;\n  };\n\n  const onSubmit = async ({ name, number }) => {\n    const normalizedName = userNameNormalization(name);\n\n    let data = {};\n\n    if (normalizedName) {\n      if (contactValidationName(normalizedName)) {\n        return;\n      }\n      data.name = normalizedName;\n    }\n\n    if (number) {\n      if (contactValidationNumber(number)) {\n        return;\n      }\n      data.number = number;\n    }\n\n    await updateContact({ id, data });\n\n    reset();\n  };\n\n  return (\n    <S.ContactForm\n      autoComplete=\"off\"\n      onSubmit={handleSubmit(data => {\n        onSubmit(data);\n      })}\n    >\n      <S.Label>\n        <S.TextLabel>Current name: {oldName}</S.TextLabel>\n        <S.Input\n          {...register('name')}\n          type=\"text\"\n          pattern={validatePattern.name}\n          title={errorMessage.name}\n          placeholder=\"New name\"\n        />\n      </S.Label>\n\n      <S.Label>\n        <S.TextLabel>Current number: {oldNumber}</S.TextLabel>\n        <S.Input\n          {...register('number')}\n          type=\"tel\"\n          pattern={validatePattern.number}\n          title={errorMessage.number}\n          placeholder=\"New phone number\"\n          maxLength=\"20\"\n        />\n      </S.Label>\n\n      <S.Button type=\"submit\" disabled={isUpdating}>\n        {isUpdating ? (\n          <Loader width=\"15\" height=\"15\" color=\"#fff\" />\n        ) : (\n          'Edit contact'\n        )}\n      </S.Button>\n    </S.ContactForm>\n  );\n};\n\nEditContactForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","export const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  margin-bottom: 12px;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 140%;\n  color: ${({ theme }) => theme.colors.primaryText};\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 24px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 15px 20px;\n  max-width: 200px;\n  width: 100%;\n  font-size: 14px;\n  line-height: 1.4;\n  border: 1px solid ${({ theme }) => theme.colors.inputBorder};\n  border-radius: 15px;\n  outline: none;\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.4;\n    color: ${({ theme }) => theme.colors.secondaryText};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/filter/selectors';\nimport * as S from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(changeFilter(e.target.value.toLowerCase().trim()));\n  };\n\n  return (\n    <>\n      <S.Text>Find contacts by name</S.Text>\n      <S.Label aria-label=\"Contacts filter by name\">\n        <S.Input\n          onChange={handleChange}\n          value={filter}\n          name=\"filter\"\n          type=\"text\"\n          placeholder=\"Type here...\"\n        />\n      </S.Label>\n    </>\n  );\n};\n","import { RxCross2 } from 'react-icons/rx';\nimport styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  z-index: 4;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(79, 209, 197, 0.2);\n  overflow-y: auto;\n`;\n\nexport const Modal = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  max-width: 452px;\n  width: 100%;\n  transform: translate(-50%, -50%);\n\n  @media screen and (max-height: 380px) {\n    top: 30px;\n    left: 50%;\n    max-width: 452px;\n    width: 100%;\n    transform: translateX(-50%);\n  }\n`;\n\nexport const CloseIcon = styled(RxCross2)`\n  width: 20px;\n  height: 20px;\n  color: ${({ theme }) => theme.colors.accent};\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  z-index: 1;\n  top: 8px;\n  right: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 30px;\n  height: 30px;\n  padding: 0;\n  background-color: ${({ theme }) => theme.colors.primary};\n  box-shadow: 0px 3.5px 5.5px rgba(0, 0, 0, 0.02);\n  border: 1px solid ${({ theme }) => theme.colors.primary};\n  border-radius: 12px;\n  transition: border-color\n    ${({ theme }) => `${theme.duration} ${theme.timingFunction}`};\n  cursor: pointer;\n\n  &:hover {\n    border-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { EditContactForm } from 'components/ContactForm';\nimport * as S from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onCloseModal, ...otherProps }) => {\n  useEffect(() => {\n    const handleCloseModal = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    document.body.style.overflow = 'hidden';\n    window.addEventListener('keydown', handleCloseModal);\n\n    return () => {\n      document.body.style.overflow = 'auto';\n      window.removeEventListener('keydown', handleCloseModal);\n    };\n  }, [onCloseModal]);\n\n  return createPortal(\n    <S.Backdrop>\n      <S.Modal>\n        <S.Button type=\"button\" onClick={onCloseModal}>\n          <S.CloseIcon />\n        </S.Button>\n        <EditContactForm {...otherProps} />\n      </S.Modal>\n    </S.Backdrop>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onCloseModal: PropTypes.func,\n  otherProps: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import { IoMdTrash } from 'react-icons/io';\nimport { IoPencilSharp } from 'react-icons/io5';\nimport styled from 'styled-components';\n\nexport const ContactCard = styled.div`\n  position: relative;\n  width: 100%;\n  padding-top: 28px;\n  padding-bottom: 28px;\n  padding-left: 20px;\n  padding-right: 20px;\n  background-color: ${({ theme }) => theme.colors.primaryBg};\n  border-radius: 12px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    padding: 26px;\n  }\n`;\n\nexport const Name = styled.p`\n  margin-bottom: 7.5px;\n  max-width: 180px;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.4;\n  color: ${({ theme }) => theme.colors.secondary};\n\n  @media screen and (max-width: 350px) {\n    max-width: 100px;\n  }\n`;\n\nexport const Number = styled.p`\n  display: flex;\n  gap: 4px;\n  flex-wrap: wrap;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.colors.secondaryText};\n\n  & > span {\n    font-weight: 700;\n    color: ${({ theme }) => theme.colors.secondary};\n\n    @media screen and (max-width: 350px) {\n      max-width: 140px;\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    gap: 8px;\n  }\n`;\n\nexport const List = styled.ul`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n\n  display: flex;\n  gap: 2px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    top: 12px;\n    right: 12px;\n    gap: 8px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  min-width: 50px;\n  font-weight: 700;\n  font-size: 10px;\n  line-height: 1.5;\n  text-transform: uppercase;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  transition: background-color\n    ${({ theme }) => `${theme.duration} ${theme.timingFunction}`};\n  cursor: pointer;\n\n  &.delete {\n    color: ${({ theme }) => theme.colors.iconBtn};\n  }\n\n  &.edit {\n    color: ${({ theme }) => theme.colors.primaryText};\n  }\n\n  &:hover:not(:disabled) {\n    color: ${({ theme }) => theme.colors.accent};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n  }\n`;\n\nexport const DeleteIcon = styled(IoMdTrash)`\n  width: 15px;\n  height: 15px;\n  fill: currentColor;\n`;\n\nexport const EditIcon = styled(IoPencilSharp)`\n  width: 12px;\n  height: 12px;\n  fill: currentColor;\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from 'redux/contacts/slice';\nimport { Modal } from 'components/Modal';\nimport * as S from './ContactCard.styled';\n\nexport const ContactCard = ({ contactId, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n  const [isOpenModal, setIsOpenModal] = useState(false);\n\n  const handleDeleteContact = async contactId => {\n    await deleteContact(contactId);\n  };\n\n  const handleOpenModal = () => {\n    setIsOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsOpenModal(false);\n  };\n\n  return (\n    <S.ContactCard>\n      <S.Name>{name}</S.Name>\n      <S.Number>\n        Phone number:\n        <span>{number}</span>\n      </S.Number>\n\n      <S.List>\n        <li>\n          <S.Button\n            type=\"button\"\n            onClick={() => handleDeleteContact(contactId)}\n            disabled={isDeleting}\n            className=\"delete\"\n          >\n            <S.DeleteIcon />\n            Delete\n          </S.Button>\n        </li>\n        <li>\n          <S.Button type=\"button\" className=\"edit\" onClick={handleOpenModal}>\n            <S.EditIcon />\n            Edit\n          </S.Button>\n        </li>\n      </S.List>\n      {isOpenModal && (\n        <Modal\n          id={contactId}\n          name={name}\n          number={number}\n          onCloseModal={handleCloseModal}\n        />\n      )}\n    </S.ContactCard>\n  );\n};\n\nContactCard.propTypes = {\n  contactId: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  height: 350px;\n  overflow: auto;\n  padding-right: 12px;\n\n  &::-webkit-scrollbar {\n    width: 6px;\n    background-color: ${({ theme }) => theme.colors.secondaryBg};\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background-color: ${({ theme }) => theme.colors.accent};\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    padding-right: 24px;\n  }\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 24px;\n  }\n`;\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { ContactCard } from 'components/ContactCard';\nimport * as S from './ContactList.styled';\n\nexport const ContactList = ({ contacts }) => {\n  const filter = useSelector(selectFilter);\n\n  const visibleContacts = useMemo(() => {\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n  }, [contacts, filter]);\n\n  return (\n    <S.List>\n      {visibleContacts.map(({ id, name, number }) => (\n        <S.Item key={id}>\n          <ContactCard contactId={id} name={name} number={number} />\n        </S.Item>\n      ))}\n    </S.List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\nimport backgroundImg from 'images/background.jpg';\nimport backgroundImg2x from 'images/background@2x.jpg';\n\nexport const Section = styled.section`\n  display: flex;\n  gap: 48px;\n  flex-wrap: wrap;\n  align-items: center;\n  padding-top: 64px;\n  padding-bottom: 64px;\n  padding-left: 24px;\n  padding-right: 24px;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 12px;\n    left: 50%;\n    z-index: -1;\n    display: block;\n    width: calc(100% - 24px);\n    height: 300px;\n    background-image: url(${backgroundImg});\n    background-size: cover;\n    background-position: center;\n    border-radius: 15px;\n    transform: translateX(-50%);\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${backgroundImg2x});\n      background-size: cover;\n      background-position: center;\n    }\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n      top: 24px;\n      width: calc(100% - 48px);\n    }\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    padding-left: 48px;\n    padding-right: 48px;\n  }\n\n  @media screen and (min-width: 1000px) {\n    flex-wrap: nowrap;\n  }\n`;\n\nexport const SectionTitle = styled.h1`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const TextBox = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 1.4;\n  color: ${({ theme }) => theme.colors.primaryText};\n`;\n\nexport const ContactsContainer = styled.div`\n  width: 100%;\n  padding: 28px 24px;\n  background-color: ${({ theme }) => theme.colors.primary};\n  border-radius: 15px;\n  box-shadow: 0px 7px 23px rgba(0, 0, 0, 0.05);\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    padding: 45px 51px;\n  }\n`;\n\nexport const Text = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 350px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.colors.secondaryText};\n`;\n","import { useFetchContactsQuery } from 'redux/contacts/slice';\nimport { AddContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport { Loader } from 'components/Loader';\nimport * as S from './Contacts.styled';\n\nconst Contacts = () => {\n  const { data, isSuccess, isFetching } = useFetchContactsQuery();\n\n  return (\n    <S.Section>\n      <S.SectionTitle>Phonebook</S.SectionTitle>\n\n      <AddContactForm contacts={data} />\n\n      <S.ContactsContainer>\n        <S.TextBox>\n          <S.Title>Contacts</S.Title>\n          {isFetching && <Loader width=\"20\" height=\"20\" color=\"#4FD1C5\" />}\n        </S.TextBox>\n\n        <Filter />\n        {isSuccess && data.length ? (\n          <ContactList contacts={data} />\n        ) : (\n          <S.Text>This page is empty, add some contacts.</S.Text>\n        )}\n      </S.ContactsContainer>\n    </S.Section>\n  );\n};\n\nexport default Contacts;\n","export const userNameNormalization = userName => {\n  return userName\n    .split(' ')\n    .reduce((acc, word) => {\n      const normalizedWord = word.trim();\n\n      if (normalizedWord) {\n        return (acc += normalizedWord + ' ');\n      }\n\n      return acc;\n    }, '')\n    .trim();\n};\n"],"names":["ContactForm","styled","theme","colors","primary","breakpoint","Input","inputBorder","secondaryText","accent","Label","TextLabel","Button","duration","timingFunction","initialValues","name","number","AddContactForm","contacts","useForm","defaultValues","register","handleSubmit","reset","useAddContactMutation","addContact","isAdding","isLoading","contactValidationByName","newName","some","onSubmit","normalizedName","userNameNormalization","toast","autoComplete","data","type","pattern","validatePattern","title","errorMessage","placeholder","required","maxLength","disabled","Loader","width","height","color","EditContactForm","id","oldName","oldNumber","useUpdateContactMutation","updateContact","isUpdating","useFetchContactsQuery","contactValidationName","selectFilter","state","filter","Text","primaryText","Filter","useSelector","dispatch","useDispatch","onChange","e","changeFilter","target","value","toLowerCase","trim","Backdrop","Modal","CloseIcon","RxCross2","modalRoot","document","querySelector","onCloseModal","otherProps","useEffect","handleCloseModal","code","body","style","overflow","window","addEventListener","removeEventListener","createPortal","onClick","ContactCard","primaryBg","Name","secondary","Number","List","iconBtn","DeleteIcon","IoMdTrash","EditIcon","IoPencilSharp","contactId","useDeleteContactMutation","deleteContact","isDeleting","useState","isOpenModal","setIsOpenModal","handleDeleteContact","className","secondaryBg","Item","ContactList","visibleContacts","useMemo","includes","map","Section","backgroundImg","backgroundImg2x","SectionTitle","TextBox","Title","ContactsContainer","isSuccess","isFetching","length","userName","split","reduce","acc","word","normalizedWord"],"sourceRoot":""}