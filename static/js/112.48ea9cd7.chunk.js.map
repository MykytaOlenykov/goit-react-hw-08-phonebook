{"version":3,"file":"static/js/112.48ea9cd7.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","redux/filter/selectors.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/ContactCard/ContactCard.styled.jsx","components/ContactCard/ContactCard.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx","utils/userNameNotmalization.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactForm = styled.form`\n  max-width: 452px;\n  width: 100%;\n  padding: 28px 24px;\n  background-color: ${({ theme }) => theme.colors.primary};\n  border-radius: 15px;\n  box-shadow: 0px 7px 23px rgba(0, 0, 0, 0.05);\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    padding: 45px 51px;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 15px 20px;\n  width: 100%;\n  font-size: 14px;\n  line-height: 1.4;\n  border: 1px solid ${({ theme }) => theme.colors.inputBorder};\n  border-radius: 15px;\n  outline: none;\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.4;\n    color: ${({ theme }) => theme.colors.secondaryText};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 24px;\n`;\n\nexport const TextLabel = styled.span`\n  display: block;\n  margin-bottom: 5.5px;\n  font-size: 14px;\n  line-height: 1.4;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  padding: 14px;\n  width: 100%;\n  font-weight: 700;\n  font-size: 10px;\n  line-height: 1.5;\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.primary};\n  background-color: ${({ theme }) => theme.colors.accent};\n  border: 1px solid ${({ theme }) => theme.colors.accent};\n  border-radius: 12px;\n  transition: background-color\n      ${({ theme }) => `${theme.duration} ${theme.timingFunction}`},\n    color ${({ theme }) => `${theme.duration} ${theme.timingFunction}`};\n  cursor: pointer;\n\n  &:hover:not(:disabled) {\n    color: ${({ theme }) => theme.colors.accent};\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  &:disabled {\n    opacity: 0.8;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'react-hot-toast';\nimport PropTypes from 'prop-types';\nimport { useAddContactMutation } from 'redux/contacts/slice';\nimport { BtnLoader } from 'components/BtnLoader';\nimport { validatePattern, errorMessage } from 'constants';\nimport { userNameNormalization } from 'utils';\nimport * as S from './ContactForm.styled';\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const ContactForm = ({ contacts }) => {\n  const { register, handleSubmit, reset } = useForm({\n    defaultValues: initialValues,\n  });\n  const [addContact, { isLoading: isAdding, error }] = useAddContactMutation();\n\n  useEffect(() => {\n    if (error) {\n      toast.error('Something went wrong');\n    }\n  }, [error]);\n\n  const onSubmit = async ({ name, number }) => {\n    const normalizedName = userNameNormalization(name);\n\n    if (contactValidationByName(normalizedName)) {\n      toast.error(`${name} is already in contacts.`);\n      return;\n    }\n\n    await addContact({ name: normalizedName, number });\n    reset();\n  };\n\n  const contactValidationByName = newName => {\n    return contacts.some(({ name }) => name === newName);\n  };\n\n  return (\n    <S.ContactForm\n      autoComplete=\"off\"\n      onSubmit={handleSubmit(data => {\n        onSubmit(data);\n      })}\n    >\n      <S.Label>\n        <S.TextLabel>Name</S.TextLabel>\n        <S.Input\n          {...register('name')}\n          type=\"text\"\n          pattern={validatePattern.name}\n          title={errorMessage.name}\n          placeholder=\"Full name\"\n          required\n        />\n      </S.Label>\n\n      <S.Label>\n        <S.TextLabel>Number</S.TextLabel>\n        <S.Input\n          {...register('number')}\n          type=\"tel\"\n          pattern={validatePattern.number}\n          title={errorMessage.number}\n          placeholder=\"Phone number\"\n          required\n        />\n      </S.Label>\n\n      <S.Button type=\"submit\" disabled={isAdding}>\n        {isAdding ? (\n          <BtnLoader width=\"15\" height=\"15\" color=\"#fff\" />\n        ) : (\n          'Add contact'\n        )}\n      </S.Button>\n    </S.ContactForm>\n  );\n};\n\nContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","export const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  margin-bottom: 12px;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 140%;\n  color: ${({ theme }) => theme.colors.primaryText};\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 24px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 15px 20px;\n  max-width: 200px;\n  width: 100%;\n  font-size: 14px;\n  line-height: 1.4;\n  border: 1px solid ${({ theme }) => theme.colors.inputBorder};\n  border-radius: 15px;\n  outline: none;\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.4;\n    color: ${({ theme }) => theme.colors.secondaryText};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/filter/selectors';\nimport * as S from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    dispatch(changeFilter(e.target.value.toLowerCase().trim()));\n  };\n\n  return (\n    <>\n      <S.Text>Find contacts by name</S.Text>\n      <S.Label aria-label=\"Contacts filter by name\">\n        <S.Input\n          onChange={handleChange}\n          value={filter}\n          name=\"filter\"\n          type=\"text\"\n          placeholder=\"Type here...\"\n        />\n      </S.Label>\n    </>\n  );\n};\n","import { IoMdTrash } from 'react-icons/io';\nimport { IoPencilSharp } from 'react-icons/io5';\nimport styled from 'styled-components';\n\nexport const ContactCard = styled.div`\n  position: relative;\n  width: 100%;\n  padding: 26px;\n  background-color: ${({ theme }) => theme.colors.primaryBg};\n  border-radius: 12px;\n`;\n\nexport const Name = styled.p`\n  margin-bottom: 7.5px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.4;\n  color: ${({ theme }) => theme.colors.secondary};\n`;\n\nexport const Number = styled.p`\n  display: flex;\n  gap: 8px;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.colors.secondaryText};\n\n  & > span {\n    font-weight: 700;\n    color: ${({ theme }) => theme.colors.secondary};\n  }\n`;\n\nexport const List = styled.ul`\n  position: absolute;\n  top: 50%;\n  right: 12px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n\n  transform: translateY(-50%);\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  min-width: 50px;\n  font-weight: 700;\n  font-size: 10px;\n  line-height: 1.5;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  transition: background-color\n    ${({ theme }) => `${theme.duration} ${theme.timingFunction}`};\n  cursor: pointer;\n\n  &.delete {\n    color: ${({ theme }) => theme.colors.iconBtn};\n  }\n\n  &.edit {\n    color: ${({ theme }) => theme.colors.primaryText};\n  }\n\n  &:hover:not(:disabled) {\n    color: ${({ theme }) => theme.colors.accent};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n  }\n`;\n\nexport const DeleteIcon = styled(IoMdTrash)`\n  width: 15px;\n  height: 15px;\n  fill: currentColor;\n`;\n\nexport const EditIcon = styled(IoPencilSharp)`\n  width: 12px;\n  height: 12px;\n  fill: currentColor;\n`;\n","import PropTypes from 'prop-types';\nimport { useDeleteContactMutation } from 'redux/contacts/slice';\nimport * as S from './ContactCard.styled';\n\nexport const ContactCard = ({ contactId, name, number }) => {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const handleDelete = async contactId => {\n    await deleteContact(contactId);\n  };\n\n  return (\n    <S.ContactCard>\n      <S.Name>{name}</S.Name>\n      <S.Number>\n        Phone number:\n        <span>{number}</span>\n      </S.Number>\n\n      <S.List>\n        <li>\n          <S.Button\n            type=\"button\"\n            onClick={() => handleDelete(contactId)}\n            disabled={isDeleting}\n            className=\"delete\"\n          >\n            <S.DeleteIcon />\n            Delete\n          </S.Button>\n        </li>\n        <li>\n          <S.Button type=\"button\" className=\"edit\">\n            <S.EditIcon />\n            Edit\n          </S.Button>\n        </li>\n      </S.List>\n    </S.ContactCard>\n  );\n};\n\nContactCard.propTypes = {\n  contactId: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  height: 350px;\n  overflow: auto;\n  padding-right: 24px;\n\n  &::-webkit-scrollbar {\n    width: 6px;\n    background-color: ${({ theme }) => theme.colors.secondaryBg};\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 24px;\n  }\n`;\n","import { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { selectFilter } from 'redux/filter/selectors';\nimport { ContactCard } from 'components/ContactCard';\nimport * as S from './ContactList.styled';\n\nexport const ContactList = ({ contacts }) => {\n  const filter = useSelector(selectFilter);\n\n  const visibleContacts = useMemo(() => {\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n  }, [contacts, filter]);\n\n  return (\n    <S.List>\n      {visibleContacts.map(({ id, name, number }) => (\n        <S.Item key={id}>\n          <ContactCard contactId={id} name={name} number={number} />\n        </S.Item>\n      ))}\n    </S.List>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import styled from 'styled-components';\nimport backgroundImg from 'images/background.jpg';\nimport backgroundImg2x from 'images/background@2x.jpg';\n\nexport const Section = styled.section`\n  display: flex;\n  gap: 48px;\n  flex-wrap: wrap;\n  align-items: center;\n  padding-top: 80px;\n  padding-bottom: 80px;\n  padding-left: 24px;\n  padding-right: 24px;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 12px;\n    left: 50%;\n    z-index: -1;\n    display: block;\n    width: calc(100% - 24px);\n    height: 300px;\n    background-image: url(${backgroundImg});\n    background-size: cover;\n    background-position: center;\n    border-radius: 15px;\n    transform: translateX(-50%);\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${backgroundImg2x});\n      background-size: cover;\n      background-position: center;\n    }\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n      top: 24px;\n      width: calc(100% - 48px);\n    }\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    padding-left: 48px;\n    padding-right: 48px;\n  }\n\n  @media screen and (min-width: 1000px) {\n    flex-wrap: nowrap;\n  }\n`;\n\nexport const Title = styled.h1`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const ContactsContainer = styled.div`\n  width: 100%;\n  padding: 28px 24px;\n  background-color: ${({ theme }) => theme.colors.primary};\n  border-radius: 15px;\n  box-shadow: 0px 7px 23px rgba(0, 0, 0, 0.05);\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    padding: 45px 51px;\n  }\n`;\n\nexport const Text = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 350px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.colors.secondaryText};\n`;\n","import { useFetchContactsQuery } from 'redux/contacts/slice';\nimport { ContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport * as S from './Contacts.styled';\n\nconst Contacts = () => {\n  const { data, isSuccess } = useFetchContactsQuery();\n  console.log(data);\n\n  return (\n    <S.Section>\n      <S.Title>Phonebook</S.Title>\n\n      <ContactForm contacts={data} />\n\n      {/* <S.TitleBox>\n        <S.SecondaryTitle>Contacts</S.SecondaryTitle>\n        {isFetching && <Loader />}\n      </S.TitleBox> */}\n\n      <S.ContactsContainer>\n        <Filter />\n        {isSuccess && data.length ? (\n          <ContactList contacts={data} />\n        ) : (\n          <S.Text>This page is empty, add some contacts.</S.Text>\n        )}\n      </S.ContactsContainer>\n    </S.Section>\n  );\n};\n\nexport default Contacts;\n","export const userNameNormalization = userName => {\n  return userName\n    .split(' ')\n    .reduce((acc, word) => {\n      const normalizedWord = word.trim();\n\n      if (normalizedWord) {\n        return (acc += normalizedWord + ' ');\n      }\n\n      return acc;\n    }, '')\n    .trim();\n};\n"],"names":["ContactForm","styled","theme","colors","primary","breakpoint","Input","inputBorder","secondaryText","accent","Label","TextLabel","Button","duration","timingFunction","initialValues","name","number","contacts","useForm","defaultValues","register","handleSubmit","reset","useAddContactMutation","addContact","isAdding","isLoading","error","useEffect","toast","onSubmit","normalizedName","userNameNormalization","contactValidationByName","newName","some","autoComplete","data","type","pattern","validatePattern","title","errorMessage","placeholder","required","disabled","BtnLoader","width","height","color","selectFilter","state","filter","Text","primaryText","Filter","useSelector","dispatch","useDispatch","onChange","e","changeFilter","target","value","toLowerCase","trim","ContactCard","primaryBg","Name","secondary","Number","List","iconBtn","DeleteIcon","IoMdTrash","EditIcon","IoPencilSharp","contactId","useDeleteContactMutation","deleteContact","isDeleting","handleDelete","onClick","className","secondaryBg","Item","ContactList","visibleContacts","useMemo","includes","map","id","Section","backgroundImg","backgroundImg2x","Title","ContactsContainer","useFetchContactsQuery","isSuccess","console","log","length","userName","split","reduce","acc","word","normalizedWord"],"sourceRoot":""}