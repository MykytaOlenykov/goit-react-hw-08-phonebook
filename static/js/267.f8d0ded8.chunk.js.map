{"version":3,"file":"static/js/267.f8d0ded8.chunk.js","mappings":"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","sources":["components/RegisterForm/RegisterForm.styled.jsx","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.styled.jsx","pages/Register/Register.jsx","utils/userNameNotmalization.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Title = styled.strong`\n  display: block;\n  margin-bottom: 22px;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 1.4;\n  text-align: center;\n`;\n\nexport const RegisterForm = styled.form`\n  max-width: 452px;\n  margin-left: auto;\n  margin-right: auto;\n  padding: 28px 24px;\n  background-color: ${({ theme }) => theme.colors.primary};\n  border-radius: 15px;\n  box-shadow: 0px 7px 23px rgba(0, 0, 0, 0.05);\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    padding: 45px 51px;\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 24px;\n`;\n\nexport const TextLabel = styled.span`\n  display: block;\n  margin-bottom: 5.5px;\n  font-size: 14px;\n  line-height: 1.4;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 15px 20px;\n  width: 100%;\n  font-size: 14px;\n  line-height: 1.4;\n  border: 1px solid ${({ theme }) => theme.colors.inputBorder};\n  border-radius: 15px;\n  outline: none;\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.4;\n    color: ${({ theme }) => theme.colors.secondaryText};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 22px;\n  padding: 14px;\n  width: 100%;\n  font-weight: 700;\n  font-size: 10px;\n  line-height: 1.5;\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.primary};\n  background-color: ${({ theme }) => theme.colors.accent};\n  border: 1px solid ${({ theme }) => theme.colors.accent};\n  border-radius: 12px;\n  transition: background-color\n      ${({ theme }) => `${theme.duration} ${theme.timingFunction}`},\n    color ${({ theme }) => `${theme.duration} ${theme.timingFunction}`};\n  cursor: pointer;\n\n  &:hover:not(:disabled) {\n    color: ${({ theme }) => theme.colors.accent};\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  &:disabled {\n    opacity: 0.8;\n  }\n`;\n\nexport const Text = styled.span`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 4px;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.4;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.secondaryText};\n`;\n\nexport const SignInLink = styled(Link)`\n  position: relative;\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.accent};\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 1.5px;\n    left: 0;\n    display: block;\n    height: 1px;\n    width: 100%;\n    background-color: ${({ theme }) => theme.colors.accent};\n    opacity: 0;\n    transition: opacity\n      ${({ theme }) => `${theme.duration} ${theme.timingFunction}`};\n  }\n\n  &:hover::after {\n    opacity: 1;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { register as registerUser } from 'redux/auth/operations';\nimport { Loader } from 'components/Loader';\nimport { useAuth } from 'hooks';\nimport { userNameNormalization } from 'utils';\nimport { validatePattern, errorMessage } from 'constants';\nimport * as S from './RegisterForm.styled';\n\nconst initialValues = {\n  name: '',\n  email: '',\n  password: '',\n};\n\nexport const RegisterForm = () => {\n  const { register, handleSubmit, reset } = useForm({\n    defaultValues: initialValues,\n  });\n  const dispatch = useDispatch();\n  const { isLoading } = useAuth();\n\n  const onSubmit = ({ name, email, password }) => {\n    const normalizedName = userNameNormalization(name);\n\n    dispatch(registerUser({ name: normalizedName, email, password }));\n    reset();\n  };\n\n  return (\n    <S.RegisterForm\n      autoComplete=\"off\"\n      onSubmit={handleSubmit(data => {\n        onSubmit(data);\n      })}\n    >\n      <S.Title>Register</S.Title>\n\n      <S.Label>\n        <S.TextLabel>Name</S.TextLabel>\n        <S.Input\n          {...register('name')}\n          type=\"text\"\n          pattern={validatePattern.name}\n          title={errorMessage.name}\n          required\n          placeholder=\"Your full name\"\n        />\n      </S.Label>\n\n      <S.Label>\n        <S.TextLabel>Email</S.TextLabel>\n        <S.Input\n          {...register('email')}\n          type=\"email\"\n          required\n          placeholder=\"Your email address\"\n        />\n      </S.Label>\n\n      <S.Label>\n        <S.TextLabel>Password</S.TextLabel>\n        <S.Input\n          {...register('password')}\n          type=\"password\"\n          minlength=\"8\"\n          title={errorMessage.password}\n          required\n          placeholder=\"Your password\"\n        />\n      </S.Label>\n\n      <S.Button type=\"submit\" disabled={isLoading}>\n        {isLoading ? <Loader width=\"15\" height=\"15\" color=\"#fff\" /> : 'Sing up'}\n      </S.Button>\n\n      <S.Text>\n        Already have an account?\n        <S.SignInLink to=\"/login\">Sign in</S.SignInLink>\n      </S.Text>\n    </S.RegisterForm>\n  );\n};\n","import styled from 'styled-components';\nimport backgroundImg from 'images/background.jpg';\nimport backgroundImg2x from 'images/background@2x.jpg';\n\nexport const Section = styled.section`\n  padding-top: 72px;\n  padding-left: 24px;\n  padding-right: 24px;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 12px;\n    left: 50%;\n    z-index: -1;\n    display: block;\n    width: calc(100% - 24px);\n    height: 400px;\n    background-image: url(${backgroundImg});\n    background-size: cover;\n    background-position: center;\n    border-radius: 15px;\n    transform: translateX(-50%);\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${backgroundImg2x});\n      background-size: cover;\n      background-position: center;\n    }\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n      top: 24px;\n      width: calc(100% - 48px);\n    }\n  }\n`;\n\nexport const Title = styled.h1`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 80px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1.3;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.primary};\n`;\n","import { RegisterForm } from 'components/RegisterForm';\nimport * as S from './Register.styled';\n\nconst Register = () => (\n  <S.Section>\n    <S.Title>Register form</S.Title>\n    <S.Text>Welcome!</S.Text>\n    <RegisterForm />\n  </S.Section>\n);\n\nexport default Register;\n","export const userNameNormalization = userName => {\n  return userName\n    .split(' ')\n    .reduce((acc, word) => {\n      const normalizedWord = word.trim();\n\n      if (normalizedWord) {\n        return (acc += normalizedWord + ' ');\n      }\n\n      return acc;\n    }, '')\n    .trim();\n};\n"],"names":["Title","styled","RegisterForm","theme","colors","primary","breakpoint","Label","TextLabel","Input","inputBorder","secondaryText","accent","Button","duration","timingFunction","Text","SignInLink","Link","initialValues","name","email","password","useForm","defaultValues","register","handleSubmit","reset","dispatch","useDispatch","isLoading","useAuth","autoComplete","onSubmit","data","normalizedName","userNameNormalization","registerUser","type","pattern","validatePattern","title","errorMessage","required","placeholder","minlength","disabled","Loader","width","height","color","to","Section","backgroundImg","backgroundImg2x","userName","split","reduce","acc","word","normalizedWord","trim"],"sourceRoot":""}