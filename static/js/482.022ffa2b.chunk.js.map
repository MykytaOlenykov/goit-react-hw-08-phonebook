{"version":3,"file":"static/js/482.022ffa2b.chunk.js","mappings":"uTAGaA,EAAQC,EAAAA,GAAAA,EAAH,gJAMP,qBAAGC,MAAkBC,OAAOC,aAA5B,IAGEC,EAAYJ,EAAAA,GAAAA,KAAH,6CAITK,EAAQL,EAAAA,GAAAA,MAAH,mEAKLM,EAAYN,EAAAA,GAAAA,KAAH,6GAOTO,EAAQP,EAAAA,GAAAA,MAAH,qXAMI,qBAAGC,MAAkBC,OAAOM,OAA5B,IACA,qBAAGP,MAAkBC,OAAOO,WAA5B,IAQT,qBAAGR,MAAkBC,OAAOC,aAA5B,IAIO,qBAAGF,MAAkBC,OAAOQ,MAA5B,IAIPC,EAASX,EAAAA,GAAAA,OAAH,igBAUR,qBAAGC,MAAkBC,OAAOM,OAA5B,IACW,qBAAGP,MAAkBC,OAAOQ,MAA5B,IACA,qBAAGT,MAAkBC,OAAOQ,MAA5B,IAGd,gBAAGT,EAAH,EAAGA,MAAH,gBAAkBA,EAAMW,SAAxB,YAAoCX,EAAMY,eAA1C,IACI,gBAAGZ,EAAH,EAAGA,MAAH,gBAAkBA,EAAMW,SAAxB,YAAoCX,EAAMY,eAA1C,IAIC,qBAAGZ,MAAkBC,OAAOQ,MAA5B,IACW,qBAAGT,MAAkBC,OAAOM,OAA5B,IAQXM,EAAOd,EAAAA,GAAAA,KAAH,2MASN,qBAAGC,MAAkBC,OAAOC,aAA5B,IAGEY,GAAaf,EAAAA,EAAAA,IAAOgB,EAAAA,GAAPhB,CAAH,iXAGZ,qBAAGC,MAAkBC,OAAOQ,MAA5B,IAUa,qBAAGT,MAAkBC,OAAOQ,MAA5B,IAGhB,gBAAGT,EAAH,EAAGA,MAAH,gBAAkBA,EAAMW,SAAxB,YAAoCX,EAAMY,eAA1C,I,SCpGFI,EAAgB,CACpBC,MAAO,GACPC,SAAU,IAGCf,EAAY,WACvB,OAA0CgB,EAAAA,EAAAA,IAAQ,CAChDC,cAAeJ,IADTK,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,aAAcC,EAAhC,EAAgCA,MAG1BC,GAAWC,EAAAA,EAAAA,MACTC,GAAcC,EAAAA,EAAAA,KAAdD,UAOR,OACE,UAAC,EAAD,CACEE,aAAa,MACbC,SAAUP,GAAa,SAAAQ,IARV,SAAAA,GACfN,GAASO,EAAAA,EAAAA,IAAMD,IACfP,GACD,CAMKM,CAASC,EACV,IAJH,WAME,SAAC,EAAD,wDAEA,UAAC,EAAD,YACE,SAAC,EAAD,qBACA,SAAC,GAAD,kBACMT,EAAS,UADf,IAEEW,KAAK,QACLC,UAAQ,EACRC,YAAY,4BAIhB,UAAC,EAAD,YACE,SAAC,EAAD,wBACA,SAAC,GAAD,kBACMb,EAAS,aADf,IAEEW,KAAK,WACLG,UAAU,IACVC,MAAOC,EAAAA,GAAAA,SACPJ,UAAQ,EACRC,YAAY,uBAIhB,SAAC,EAAD,CAAUF,KAAK,SAASM,SAAUZ,EAAlC,SACGA,GAAY,SAACa,EAAA,EAAD,CAAQC,MAAM,KAAKC,OAAO,KAAKC,MAAM,SAAY,aAGhE,UAAC,EAAD,qCAEE,SAAC,EAAD,CAAcC,GAAG,YAAjB,0BAIP,E,oBC9DYC,EAAU7C,EAAAA,GAAAA,QAAH,88BAcQ8C,EAQEC,GAKM,qBAAG9C,MAAkB+C,UAArB,IAmBvBjD,EAAQC,EAAAA,GAAAA,GAAH,2NAaLc,EAAOd,EAAAA,GAAAA,EAAH,8HAKN,qBAAGC,MAAkBC,OAAOQ,MAA5B,ICzDX,EARc,kBACZ,UAAC,EAAD,YACE,SAAC,EAAD,6BACA,SAAC,EAAD,wBACA,SAACN,EAAD,MAJU,C","sources":["components/LoginForm/LoginForm.styled.jsx","components/LoginForm/LoginForm.jsx","pages/Login/Login.styled.jsx","pages/Login/Login.jsx"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Title = styled.p`\n  display: block;\n  margin-bottom: 36px;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.4;\n  color: ${({ theme }) => theme.colors.secondaryText};\n`;\n\nexport const LoginForm = styled.form`\n  max-width: 353px;\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 24px;\n`;\n\nexport const TextLabel = styled.span`\n  display: block;\n  margin-bottom: 5.5px;\n  font-size: 14px;\n  line-height: 1.4;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 15px 20px;\n  width: 100%;\n  font-size: 14px;\n  line-height: 1.4;\n  background-color: ${({ theme }) => theme.colors.primary};\n  border: 1px solid ${({ theme }) => theme.colors.inputBorder};\n  border-radius: 15px;\n  outline: none;\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.4;\n    color: ${({ theme }) => theme.colors.secondaryText};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  margin-bottom: 22px;\n  padding: 14px;\n  width: 100%;\n  font-weight: 700;\n  font-size: 10px;\n  line-height: 1.5;\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.primary};\n  background-color: ${({ theme }) => theme.colors.accent};\n  border: 1px solid ${({ theme }) => theme.colors.accent};\n  border-radius: 12px;\n  transition: background-color\n      ${({ theme }) => `${theme.duration} ${theme.timingFunction}`},\n    color ${({ theme }) => `${theme.duration} ${theme.timingFunction}`};\n  cursor: pointer;\n\n  &:hover:not(:disabled) {\n    color: ${({ theme }) => theme.colors.accent};\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  &:disabled {\n    opacity: 0.8;\n  }\n`;\n\nexport const Text = styled.span`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 4px;\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 1.4;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.secondaryText};\n`;\n\nexport const SignInLink = styled(Link)`\n  position: relative;\n  text-decoration: none;\n  color: ${({ theme }) => theme.colors.accent};\n\n  &::after {\n    content: '';\n    position: absolute;\n    bottom: 1.5px;\n    left: 0;\n    display: block;\n    height: 1px;\n    width: 100%;\n    background-color: ${({ theme }) => theme.colors.accent};\n    opacity: 0;\n    transition: opacity\n      ${({ theme }) => `${theme.duration} ${theme.timingFunction}`};\n  }\n\n  &:hover::after {\n    opacity: 1;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { logIn } from 'redux/auth/operations';\nimport { useAuth } from 'hooks';\nimport { Loader } from 'components/Loader';\nimport { errorMessage } from 'constants';\nimport * as S from './LoginForm.styled';\n\nconst initialValues = {\n  email: '',\n  password: '',\n};\n\nexport const LoginForm = () => {\n  const { register, handleSubmit, reset } = useForm({\n    defaultValues: initialValues,\n  });\n  const dispatch = useDispatch();\n  const { isLoading } = useAuth();\n\n  const onSubmit = data => {\n    dispatch(logIn(data));\n    reset();\n  };\n\n  return (\n    <S.LoginForm\n      autoComplete=\"off\"\n      onSubmit={handleSubmit(data => {\n        onSubmit(data);\n      })}\n    >\n      <S.Title>Enter your email and password to sign in</S.Title>\n\n      <S.Label>\n        <S.TextLabel>Email</S.TextLabel>\n        <S.Input\n          {...register('email')}\n          type=\"email\"\n          required\n          placeholder=\"Your email address\"\n        />\n      </S.Label>\n\n      <S.Label>\n        <S.TextLabel>Password</S.TextLabel>\n        <S.Input\n          {...register('password')}\n          type=\"password\"\n          minlength=\"8\"\n          title={errorMessage.password}\n          required\n          placeholder=\"Your password\"\n        />\n      </S.Label>\n\n      <S.Button type=\"submit\" disabled={isLoading}>\n        {isLoading ? <Loader width=\"15\" height=\"15\" color=\"#fff\" /> : 'Sing in'}\n      </S.Button>\n\n      <S.Text>\n        Don't have an account?\n        <S.SignInLink to=\"/register\">Sign up</S.SignInLink>\n      </S.Text>\n    </S.LoginForm>\n  );\n};\n","import styled from 'styled-components';\nimport backgroundImg from 'images/backgroundCube.jpg';\nimport backgroundImg2x from 'images/backgroundCube@2x.jpg';\n\nexport const Section = styled.section`\n  padding-top: 188px;\n  padding-left: 24px;\n  padding-right: 24px;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 12px;\n    right: 12px;\n    z-index: -1;\n    display: block;\n    width: 260px;\n    height: 260px;\n    background-image: url(${backgroundImg});\n    background-size: cover;\n    background-position: center;\n    border-radius: 15px;\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${backgroundImg2x});\n      background-size: cover;\n      background-position: center;\n    }\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n      top: 24px;\n      right: 24px;\n      padding-left: 48px;\n      padding-right: 48px;\n    }\n\n    @media screen and (min-width: 730px) {\n      width: calc(100vw - 480px);\n      height: calc(100vw - 480px);\n    }\n\n    @media screen and (min-width: 1080px) {\n      width: 600px;\n      height: 600px;\n    }\n  }\n`;\n\nexport const Title = styled.h1`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const Text = styled.p`\n  margin-bottom: 8.5px;\n  font-weight: 700;\n  font-size: 32px;\n  line-height: 1.3;\n  color: ${({ theme }) => theme.colors.accent};\n`;\n","import { LoginForm } from 'components/LoginForm';\nimport * as S from './Login.styled';\n\nconst Login = () => (\n  <S.Section>\n    <S.Title>Register form</S.Title>\n    <S.Text>Welcome!</S.Text>\n    <LoginForm />\n  </S.Section>\n);\n\nexport default Login;\n"],"names":["Title","styled","theme","colors","secondaryText","LoginForm","Label","TextLabel","Input","primary","inputBorder","accent","Button","duration","timingFunction","Text","SignInLink","Link","initialValues","email","password","useForm","defaultValues","register","handleSubmit","reset","dispatch","useDispatch","isLoading","useAuth","autoComplete","onSubmit","data","logIn","type","required","placeholder","minlength","title","errorMessage","disabled","Loader","width","height","color","to","Section","backgroundImg","backgroundImg2x","breakpoint"],"sourceRoot":""}