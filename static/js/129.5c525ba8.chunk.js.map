{"version":3,"file":"static/js/129.5c525ba8.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.jsx","redux/contacts/selectors.js","components/ContactForm/AddContactForm.jsx","components/ContactForm/EditContactForm.jsx","redux/filter/selectors.js","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","components/ContactCard/ContactCard.styled.jsx","components/ContactCard/ContactCard.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.styled.jsx","pages/Contacts/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const ContactForm = styled.form`\n  max-width: 452px;\n  width: 100%;\n  padding: 28px 24px;\n  background-color: ${({ theme }) => theme.colors.primary};\n  border-radius: 15px;\n  box-shadow: 0px 7px 23px rgba(0, 0, 0, 0.05);\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    padding: 45px 51px;\n  }\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 15px 20px;\n  width: 100%;\n  font-size: 14px;\n  line-height: 1.4;\n  border: 1px solid ${({ theme }) => theme.colors.inputBorder};\n  border-radius: 15px;\n  outline: none;\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.4;\n    color: ${({ theme }) => theme.colors.secondaryText};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 24px;\n`;\n\nexport const TextLabel = styled.span`\n  display: block;\n  margin-bottom: 5.5px;\n  font-size: 14px;\n  line-height: 1.4;\n\n  word-wrap: break-word;\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  justify-content: center;\n  padding: 14px;\n  width: 100%;\n  font-weight: 700;\n  font-size: 10px;\n  line-height: 1.5;\n  text-transform: uppercase;\n  color: ${({ theme }) => theme.colors.primary};\n  background-color: ${({ theme }) => theme.colors.accent};\n  border: 1px solid ${({ theme }) => theme.colors.accent};\n  border-radius: 12px;\n  transition: background-color\n      ${({ theme }) => `${theme.duration} ${theme.timingFunction}`},\n    color ${({ theme }) => `${theme.duration} ${theme.timingFunction}`};\n  cursor: pointer;\n\n  &:hover:not(:disabled) {\n    color: ${({ theme }) => theme.colors.accent};\n    background-color: ${({ theme }) => theme.colors.primary};\n  }\n\n  &:disabled {\n    opacity: 0.8;\n  }\n`;\n\nexport const ErrorText = styled.span`\n  padding: 2px;\n  font-size: 12px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.colors.errorText};\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectIsAdding = state => state.contacts.isAdding;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(({ name }) => name.toLowerCase().includes(filter));\n  }\n);\n","import { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'react-hot-toast';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Loader } from 'components/Loader';\nimport { validatePattern, errorMessage } from 'constants';\nimport * as S from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsAdding } from 'redux/contacts/selectors';\nimport { clearError } from 'redux/contacts/slice';\nimport { addContact } from 'redux/contacts/operations';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .trim()\n    .min(2)\n    .max(255)\n    .matches(validatePattern.name, errorMessage.name)\n    .required(),\n  number: yup\n    .string()\n    .max(20)\n    .matches(validatePattern.number, errorMessage.number)\n    .required(),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const AddContactForm = ({ contacts }) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    defaultValues: initialValues,\n    resolver: yupResolver(schema),\n  });\n  const isAdding = useSelector(selectIsAdding);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (error) {\n      toast.error(\n        'Something went wrong while adding a contact, please try again later.'\n      );\n      dispatch(clearError());\n    }\n  }, [error, dispatch]);\n\n  const onSubmit = async ({ name, number }) => {\n    const normalizedName = name.trim();\n\n    if (contactValidationByName(normalizedName)) {\n      toast.error(`${normalizedName} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact({ name: normalizedName, number }));\n\n    reset();\n  };\n\n  const contactValidationByName = newName => {\n    return contacts.some(({ name }) => name === newName);\n  };\n\n  return (\n    <S.ContactForm\n      autoComplete=\"off\"\n      noValidate\n      onSubmit={handleSubmit(data => {\n        onSubmit(data);\n      })}\n    >\n      <S.Label>\n        <S.TextLabel>Name</S.TextLabel>\n        <S.Input {...register('name')} type=\"text\" placeholder=\"Full name\" />\n        {errors.name && <S.ErrorText>{errors.name?.message}</S.ErrorText>}\n      </S.Label>\n\n      <S.Label>\n        <S.TextLabel>Number</S.TextLabel>\n        <S.Input\n          {...register('number')}\n          type=\"tel\"\n          placeholder=\"Phone number\"\n        />\n        {errors.number && <S.ErrorText>{errors.number?.message}</S.ErrorText>}\n      </S.Label>\n\n      <S.Button type=\"submit\" disabled={isAdding}>\n        {isAdding ? (\n          <Loader width=\"15\" height=\"15\" color=\"#fff\" />\n        ) : (\n          'Add contact'\n        )}\n      </S.Button>\n    </S.ContactForm>\n  );\n};\n\nAddContactForm.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.exact({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n};\n","import { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { toast } from 'react-hot-toast';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { Loader } from 'components/Loader';\nimport { validatePattern, errorMessage } from 'constants';\nimport * as S from './ContactForm.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts, selectError } from 'redux/contacts/selectors';\nimport { clearError } from 'redux/contacts/slice';\nimport { updateContact } from 'redux/contacts/operations';\n\nconst schema = yup.object().shape({\n  name: yup\n    .string()\n    .trim()\n    .max(255)\n    .matches(validatePattern.name, errorMessage.name),\n  number: yup\n    .string()\n    .max(20)\n    .matches(validatePattern.number, errorMessage.number),\n});\n\nconst initialValues = {\n  name: '',\n  number: '',\n};\n\nexport const EditContactForm = ({ id, name: oldName, number: oldNumber }) => {\n  const {\n    register,\n    handleSubmit,\n    reset,\n    formState: { errors },\n  } = useForm({\n    defaultValues: initialValues,\n    resolver: yupResolver(schema),\n  });\n  const [isUpdating, setIsUpdating] = useState(false);\n  const contacts = useSelector(selectContacts);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (error) {\n      toast.error(\n        'Something went wrong while updating the contact, please try again later.'\n      );\n      dispatch(clearError());\n    }\n  }, [error, dispatch]);\n\n  const onSubmit = async ({ name, number }) => {\n    setIsUpdating(true);\n\n    const normalizedName = name.trim();\n\n    let data = {};\n\n    if (normalizedName) {\n      if (contactValidationName(normalizedName)) {\n        return;\n      }\n      data.name = normalizedName;\n    }\n\n    if (number) {\n      data.number = number;\n    }\n\n    await dispatch(updateContact({ id, data }));\n\n    reset();\n    setIsUpdating(false);\n  };\n\n  const contactValidationName = newName => {\n    if (contacts.some(({ name }) => name === newName)) {\n      toast.error(`${newName} is already in contacts.`);\n      return true;\n    }\n\n    return false;\n  };\n\n  return (\n    <S.ContactForm\n      autoComplete=\"off\"\n      noValidate\n      onSubmit={handleSubmit(data => {\n        onSubmit(data);\n      })}\n    >\n      <S.Label>\n        <S.TextLabel>Current name: {oldName}</S.TextLabel>\n        <S.Input {...register('name')} type=\"text\" placeholder=\"New name\" />\n        {errors.name && <S.ErrorText>{errors.name?.message}</S.ErrorText>}\n      </S.Label>\n\n      <S.Label>\n        <S.TextLabel>Current number: {oldNumber}</S.TextLabel>\n        <S.Input\n          {...register('number')}\n          type=\"tel\"\n          placeholder=\"New phone number\"\n        />\n        {errors.number && <S.ErrorText>{errors.number?.message}</S.ErrorText>}\n      </S.Label>\n\n      <S.Button type=\"submit\" disabled={isUpdating}>\n        {isUpdating ? (\n          <Loader width=\"15\" height=\"15\" color=\"#fff\" />\n        ) : (\n          'Edit contact'\n        )}\n      </S.Button>\n    </S.ContactForm>\n  );\n};\n\nEditContactForm.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","export const selectFilter = state => state.filter;\n","import styled from 'styled-components';\n\nexport const Text = styled.p`\n  margin-bottom: 12px;\n  font-weight: 700;\n  font-size: 18px;\n  line-height: 140%;\n  color: ${({ theme }) => theme.colors.primaryText};\n`;\n\nexport const Label = styled.label`\n  display: block;\n  margin-bottom: 24px;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  padding: 15px 20px;\n  max-width: 200px;\n  width: 100%;\n  font-size: 14px;\n  line-height: 1.4;\n  border: 1px solid ${({ theme }) => theme.colors.inputBorder};\n  border-radius: 15px;\n  outline: none;\n\n  &::placeholder {\n    font-weight: 400;\n    font-size: 14px;\n    line-height: 1.4;\n    color: ${({ theme }) => theme.colors.secondaryText};\n  }\n\n  &:focus {\n    border-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { changeFilter } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/filter/selectors';\nimport * as S from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const handleChangeFilter = e => {\n    dispatch(changeFilter(e.target.value.toLowerCase().trim()));\n  };\n\n  return (\n    <>\n      <S.Text>Find contacts by name</S.Text>\n      <S.Label aria-label=\"Contacts filter by name\">\n        <S.Input\n          onChange={handleChangeFilter}\n          value={filter}\n          name=\"filter\"\n          type=\"text\"\n          placeholder=\"Type here...\"\n        />\n      </S.Label>\n    </>\n  );\n};\n","import { RxCross2 } from 'react-icons/rx';\nimport styled from 'styled-components';\n\nexport const Backdrop = styled.div`\n  position: fixed;\n  z-index: 4;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(79, 209, 197, 0.2);\n  overflow-y: auto;\n`;\n\nexport const Modal = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  max-width: 452px;\n  width: 100%;\n  transform: translate(-50%, -50%);\n\n  @media screen and (max-height: 380px) {\n    top: 30px;\n    left: 50%;\n    max-width: 452px;\n    width: 100%;\n    transform: translateX(-50%);\n  }\n`;\n\nexport const CloseIcon = styled(RxCross2)`\n  width: 20px;\n  height: 20px;\n  color: ${({ theme }) => theme.colors.accent};\n`;\n\nexport const Button = styled.button`\n  position: absolute;\n  z-index: 1;\n  top: 8px;\n  right: 8px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 30px;\n  height: 30px;\n  padding: 0;\n  background-color: ${({ theme }) => theme.colors.primary};\n  box-shadow: 0px 3.5px 5.5px rgba(0, 0, 0, 0.02);\n  border: 1px solid ${({ theme }) => theme.colors.primary};\n  border-radius: 12px;\n  transition: border-color\n    ${({ theme }) => `${theme.duration} ${theme.timingFunction}`};\n  cursor: pointer;\n\n  &:hover {\n    border-color: ${({ theme }) => theme.colors.accent};\n  }\n`;\n","import { useEffect } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport { EditContactForm } from 'components/ContactForm';\nimport * as S from './Modal.styled';\n\nconst modalRoot = document.querySelector('#modal-root');\n\nexport const Modal = ({ onCloseModal, ...otherProps }) => {\n  useEffect(() => {\n    const handleCloseModal = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    document.body.style.overflow = 'hidden';\n    window.addEventListener('keydown', handleCloseModal);\n\n    return () => {\n      document.body.style.overflow = 'auto';\n      window.removeEventListener('keydown', handleCloseModal);\n    };\n  }, [onCloseModal]);\n\n  return createPortal(\n    <S.Backdrop>\n      <S.Modal>\n        <S.Button type=\"button\" onClick={onCloseModal}>\n          <S.CloseIcon />\n        </S.Button>\n        <EditContactForm {...otherProps} />\n      </S.Modal>\n    </S.Backdrop>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n  otherProps: PropTypes.exact({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n","import { IoMdTrash } from 'react-icons/io';\nimport { IoPencilSharp } from 'react-icons/io5';\nimport styled from 'styled-components';\n\nexport const ContactCard = styled.div`\n  position: relative;\n  width: 100%;\n  padding-top: 28px;\n  padding-bottom: 24px;\n  padding-left: 20px;\n  padding-right: 20px;\n  background-color: ${({ theme }) => theme.colors.primaryBg};\n  border-radius: 12px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    padding-top: 20px;\n    padding-bottom: 16px;\n    padding-left: 20px;\n    padding-right: 20px;\n  }\n`;\n\nexport const Name = styled.p`\n  margin-bottom: 7.5px;\n  max-width: 180px;\n  word-wrap: break-word;\n  font-weight: 700;\n  font-size: 14px;\n  line-height: 1.4;\n  color: ${({ theme }) => theme.colors.secondary};\n\n  @media screen and (max-width: 350px) {\n    max-width: 100px;\n  }\n`;\n\nexport const Number = styled.p`\n  display: flex;\n  gap: 4px;\n  flex-wrap: wrap;\n  font-weight: 400;\n  font-size: 12px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.colors.secondaryText};\n\n  & > span {\n    font-weight: 700;\n    color: ${({ theme }) => theme.colors.secondary};\n    padding-bottom: 4px;\n\n    overflow-x: auto;\n    &::-webkit-scrollbar {\n      height: 4px;\n      background-color: ${({ theme }) => theme.colors.secondaryBg};\n      border-radius: 12px;\n    }\n    &::-webkit-scrollbar-thumb {\n      border-radius: 12px;\n      background-color: ${({ theme }) => theme.colors.accent};\n    }\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    gap: 8px;\n  }\n`;\n\nexport const List = styled.ul`\n  position: absolute;\n  top: 8px;\n  right: 8px;\n\n  display: flex;\n  gap: 2px;\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    top: 12px;\n    right: 12px;\n    gap: 8px;\n  }\n`;\n\nexport const Button = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 4px;\n  min-width: 50px;\n  font-weight: 700;\n  font-size: 10px;\n  line-height: 1.5;\n  text-transform: uppercase;\n  padding: 0;\n  border: none;\n  background-color: transparent;\n  transition: background-color\n    ${({ theme }) => `${theme.duration} ${theme.timingFunction}`};\n  cursor: pointer;\n\n  &.delete {\n    color: ${({ theme }) => theme.colors.iconBtn};\n  }\n\n  &.edit {\n    color: ${({ theme }) => theme.colors.primaryText};\n  }\n\n  &:hover:not(:disabled) {\n    color: ${({ theme }) => theme.colors.accent};\n  }\n\n  &:disabled {\n    opacity: 0.5;\n  }\n`;\n\nexport const DeleteIcon = styled(IoMdTrash)`\n  width: 15px;\n  height: 15px;\n  fill: currentColor;\n`;\n\nexport const EditIcon = styled(IoPencilSharp)`\n  width: 12px;\n  height: 12px;\n  fill: currentColor;\n`;\n","import { useState, useEffect } from 'react';\nimport { toast } from 'react-hot-toast';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { clearError } from 'redux/contacts/slice';\nimport { Modal } from 'components/Modal';\nimport * as S from './ContactCard.styled';\nimport { selectError } from 'redux/contacts/selectors';\nimport { deleteContact } from 'redux/contacts/operations';\n\nexport const ContactCard = ({ contactId, name, number }) => {\n  const [isOpenModal, setIsOpenModal] = useState(false);\n  const [isDeleting, setIsDeleting] = useState(false);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (error) {\n      toast.error(\n        'Something went wrong while deleting a contact, please try again later.'\n      );\n      dispatch(clearError());\n    }\n  }, [error, dispatch]);\n\n  const handleDeleteContact = async contactId => {\n    setIsDeleting(true);\n    await dispatch(deleteContact(contactId));\n    setIsDeleting(false);\n  };\n\n  const handleOpenModal = () => {\n    setIsOpenModal(true);\n  };\n\n  const handleCloseModal = () => {\n    setIsOpenModal(false);\n  };\n\n  return (\n    <S.ContactCard>\n      <S.Name>{name}</S.Name>\n      <S.Number>\n        Phone number:\n        <span>{number}</span>\n      </S.Number>\n\n      <S.List>\n        <li>\n          <S.Button\n            type=\"button\"\n            onClick={() => handleDeleteContact(contactId)}\n            disabled={isDeleting}\n            className=\"delete\"\n          >\n            <S.DeleteIcon />\n            Delete\n          </S.Button>\n        </li>\n        <li>\n          <S.Button type=\"button\" className=\"edit\" onClick={handleOpenModal}>\n            <S.EditIcon />\n            Edit\n          </S.Button>\n        </li>\n      </S.List>\n      {isOpenModal && (\n        <Modal\n          id={contactId}\n          name={name}\n          number={number}\n          onCloseModal={handleCloseModal}\n        />\n      )}\n    </S.ContactCard>\n  );\n};\n\nContactCard.propTypes = {\n  contactId: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  height: 350px;\n  overflow: auto;\n  padding-right: 12px;\n\n  &::-webkit-scrollbar {\n    width: 6px;\n    background-color: ${({ theme }) => theme.colors.secondaryBg};\n    border-radius: 12px;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    border-radius: 12px;\n    background-color: ${({ theme }) => theme.colors.accent};\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    padding-right: 24px;\n  }\n`;\n\nexport const Item = styled.li`\n  &:not(:last-child) {\n    margin-bottom: 24px;\n  }\n`;\n","import { useSelector } from 'react-redux';\nimport { ContactCard } from 'components/ContactCard';\nimport * as S from './ContactList.styled';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <S.List>\n      {visibleContacts.map(({ id, name, number }) => (\n        <S.Item key={id}>\n          <ContactCard contactId={id} name={name} number={number} />\n        </S.Item>\n      ))}\n    </S.List>\n  );\n};\n","import styled from 'styled-components';\nimport backgroundImg from 'images/background.jpg';\nimport backgroundImg2x from 'images/background@2x.jpg';\n\nexport const ErrorText = styled.p`\n  width: 100%;\n  text-align: center;\n  font-size: 20px;\n  line-height: 1.5;\n  color: ${({ theme }) => theme.colors.secondary};\n\n  @media screen and (min-width: 420px) {\n    font-size: 24px;\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    font-size: 28px;\n  }\n`;\n\nexport const Section = styled.section`\n  display: flex;\n  gap: 48px;\n  flex-wrap: wrap;\n  align-items: center;\n  padding-top: 64px;\n  padding-bottom: 64px;\n  padding-left: 24px;\n  padding-right: 24px;\n\n  &::after {\n    content: '';\n    position: absolute;\n    top: 12px;\n    left: 50%;\n    z-index: -1;\n    display: block;\n    width: calc(100% - 24px);\n    height: 300px;\n    background-image: url(${backgroundImg});\n    background-size: cover;\n    background-position: center;\n    border-radius: 15px;\n    transform: translateX(-50%);\n\n    @media (min-device-pixel-ratio: 2),\n      (min-resolution: 192dpi),\n      (min-resolution: 2dppx) {\n      background-image: url(${backgroundImg2x});\n      background-size: cover;\n      background-position: center;\n    }\n\n    @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n      top: 24px;\n      width: calc(100% - 48px);\n    }\n  }\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    padding-left: 48px;\n    padding-right: 48px;\n  }\n\n  @media screen and (min-width: 1000px) {\n    flex-wrap: nowrap;\n  }\n`;\n\nexport const SectionTitle = styled.h1`\n  position: absolute;\n  white-space: nowrap;\n  width: 1px;\n  height: 1px;\n  overflow: hidden;\n  border: 0;\n  padding: 0;\n  clip: rect(0 0 0 0);\n  clip-path: inset(50%);\n  margin: -1px;\n`;\n\nexport const TextBox = styled.div`\n  display: flex;\n  gap: 8px;\n  align-items: center;\n  margin-bottom: 20px;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 24px;\n  line-height: 1.4;\n  color: ${({ theme }) => theme.colors.primaryText};\n`;\n\nexport const ContactsContainer = styled.div`\n  width: 100%;\n  padding: 28px 24px;\n  background-color: ${({ theme }) => theme.colors.primary};\n  border-radius: 15px;\n  box-shadow: 0px 7px 23px rgba(0, 0, 0, 0.05);\n\n  @media screen and (min-width: ${({ theme }) => theme.breakpoint}) {\n    padding: 45px 51px;\n  }\n`;\n\nexport const Text = styled.p`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 350px;\n  font-weight: 700;\n  font-size: 16px;\n  line-height: 1.5;\n  text-align: center;\n  color: ${({ theme }) => theme.colors.secondaryText};\n`;\n","import { AddContactForm } from 'components/ContactForm';\nimport { Filter } from 'components/Filter';\nimport { ContactList } from 'components/ContactList';\nimport * as S from './Contacts.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n} from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport { PageLoader } from 'components/Loader';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  if (isLoading) {\n    return <PageLoader />;\n  }\n\n  if (error) {\n    return (\n      <S.Section>\n        <S.ErrorText>\n          Technical work is in progress. We apologize for the temporary\n          inconvenience.\n        </S.ErrorText>\n      </S.Section>\n    );\n  }\n\n  return (\n    <S.Section>\n      <S.SectionTitle>Phonebook</S.SectionTitle>\n\n      <AddContactForm contacts={contacts} />\n\n      <S.ContactsContainer>\n        <S.TextBox>\n          <S.Title>Contacts</S.Title>\n        </S.TextBox>\n\n        <Filter />\n        {contacts.length ? (\n          <ContactList />\n        ) : (\n          <S.Text>\n            You don't have any contacts. Add contacts for them to appear here.\n          </S.Text>\n        )}\n      </S.ContactsContainer>\n    </S.Section>\n  );\n};\n\nexport default Contacts;\n"],"names":["ContactForm","styled","theme","colors","primary","breakpoint","Input","inputBorder","secondaryText","accent","Label","TextLabel","Button","duration","timingFunction","ErrorText","errorText","selectContacts","state","contacts","items","selectIsLoading","isLoading","selectIsAdding","isAdding","selectError","error","selectVisibleContacts","createSelector","filter","name","toLowerCase","includes","schema","yup","shape","trim","min","max","matches","validatePattern","errorMessage","required","number","initialValues","AddContactForm","useForm","defaultValues","resolver","yupResolver","register","handleSubmit","reset","errors","formState","useSelector","dispatch","useDispatch","useEffect","toast","clearError","onSubmit","normalizedName","contactValidationByName","addContact","newName","some","autoComplete","noValidate","data","type","placeholder","message","disabled","Loader","width","height","color","EditContactForm","id","oldName","oldNumber","useState","isUpdating","setIsUpdating","contactValidationName","updateContact","selectFilter","Text","primaryText","Filter","onChange","e","changeFilter","target","value","Backdrop","Modal","CloseIcon","RxCross2","modalRoot","document","querySelector","onCloseModal","otherProps","handleCloseModal","code","body","style","overflow","window","addEventListener","removeEventListener","createPortal","onClick","ContactCard","primaryBg","Name","secondary","Number","secondaryBg","List","iconBtn","DeleteIcon","IoMdTrash","EditIcon","IoPencilSharp","contactId","isOpenModal","setIsOpenModal","isDeleting","setIsDeleting","handleDeleteContact","deleteContact","className","Item","ContactList","visibleContacts","map","Section","backgroundImg","backgroundImg2x","SectionTitle","TextBox","Title","ContactsContainer","fetchContacts","length"],"sourceRoot":""}